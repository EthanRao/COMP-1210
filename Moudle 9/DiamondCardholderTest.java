import org.junit.Assert; 
import org.junit.Before;
import org.junit.Test;
/**
 * Compute the value generated by aspecified expression.
 * project 9 
 * @Xi Rao
 * @11/09/2018 
 */ 


public class DiamondCardholderTest {


/** Fixture initialization (common initialization
 *  for all tests). **/
   @Before public void setUp() {
   }
   /** getTest. **/
   @Test public void getTest() {
      DiamondCardholder dc = new DiamondCardholder("10002", "Jones, Pat");
      Assert.assertEquals("getDiscountRate Test", 0.05, 
         dc.getDiscountRate(), 0.01);
   }

/** setterTest. **/
   @Test public void setTest() {
      DiamondCardholder dc = new DiamondCardholder("10002", "Jones, Pat");
      dc.setDiscountRate(0.5);
      Assert.assertEquals("getDiscountRate Test", 0.5, 
         dc.getDiscountRate(), 0.01);
   }

/** purchasePoint. **/
   @Test public void purchasePoint() {
      DiamondCardholder dc = new DiamondCardholder("10002", "Jones, Pat"); 
      dc.addPurchases(34.5, 100.0, 63.50, 300.0); 
      dc.setPrevBalance(1200.0);
      Assert.assertEquals("purchasePoints Test", 1419, dc.purchasePoints());
   }
/** totalPurchasesTest. **/
   @Test public void totalPurchasesTest() {
      DiamondCardholder dc = new DiamondCardholder("10002", "Jones, Pat"); 
      dc.addPurchases(34.5, 100.0, 63.50, 300.0); 
      dc.setPrevBalance(1200.0);
      Assert.assertEquals("totalPurchases Test", 
         473.10, dc.totalPurchases(), 0.01);
   }
/** toStringTest. **/
   @Test public void toStringTest() {
      DiamondCardholder dc = new DiamondCardholder("10002", "Jones, Pat"); 
      dc.addPurchases(34.5, 100.0, 63.50, 300.0); 
      dc.setPrevBalance(1200.0);
      Assert.assertEquals("toString Test", 
         true, dc.toString().contains(" "));
   }


}